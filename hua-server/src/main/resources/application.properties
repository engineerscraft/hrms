authentication.accessTokenValidityPeriod=30
authentication.refreshTokenValidityPeriod=90
authentication.signingKey=OURHRMS
server.port=8080

#jdbc.dataSourceClassName=com.mysql.cj.jdbc.Driver
#jdbc.url=jdbc:mysql://localhost:3306/HRMS
#jdbc.username=HRMSADM
#jdbc.password=HRMSADM
spring.datasource.username=hrmsapp
spring.datasource.password=hrmsapp
spring.datasource.max-active=5
spring.datasource.url=jdbc:postgresql://localhost:5432/hrmsdb
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.tomcat.testOnBorrow=true 
spring.datasource.tomcat.validationQuery=SELECT 1

server.port=8080

ldap.base=dc=example,dc=com
ldap.url=ldap://localhost:10389
ldap.user=uid=admin,ou=system
ldap.password=secret


##AuthenticationRepository
sql.getAccessId=SELECT nextval('HRMS.ACCESS_ID_SEQ')
sql.saveNewToken=INSERT INTO HRMS.ACCESS_TOKEN VALUES(?, current_timestamp, ?, ?, 0, NULL)
sql.existingTokenUpdateSql=UPDATE HRMS.ACCESS_TOKEN SET EXPIRY_DTM = ?, REFRESH_COUNT = REFRESH_COUNT + 1, LAST_REFRESH_DTM = current_timestamp WHERE ACCESS_ID = ? AND USER_NAME = ?
sql.getAuthorization=SELECT DISTINCT A.* FROM HRMS.PERMISSION_MASTER A, HRMS.ROLE_MASTER B, HRMS.ROLE_PERMISSION C WHERE A.PERMISSION_ID=C.PERMISSION_ID AND B.ROLE_ID=C.ROLE_ID AND B.ROLE_NAME IN (:roleList) AND A.PERMISSION_NAME=:filter
sql.viewPermission=SELECT DISTINCT A.* FROM HRMS.PERMISSION_MASTER A, HRMS.ROLE_MASTER B, HRMS.ROLE_PERMISSION C WHERE A.PERMISSION_ID=C.PERMISSION_ID AND B.ROLE_ID=C.ROLE_ID AND B.ROLE_NAME IN (:roleList) and A.PERMISSION_TYPE='V'

##AccountRepository
sql.allAccountFetching=SELECT ACCOUNT_CODE, ACCOUNT_NAME, ACCOUNT_TYPE FROM HRMS.GL_ACCOUNT
sql.accountUpdate=UPDATE HRMS.GL_ACCOUNT SET ACCOUNT_NAME = ?, ACCOUNT_TYPE = ? WHERE ACCOUNT_CODE = ?
sql.accountDelete=DELETE FROM HRMS.GL_ACCOUNT WHERE ACCOUNT_CODE = ?
sql.accountCreate=INSERT INTO HRMS.GL_ACCOUNT VALUES(?, ?, ?)

##Employee
sql.employee.nextId=SELECT GET_SEQUENCE_NEXT_VAL('EMPLOYEE_ID')
sql.employee.list=SELECT * FROM HRMS.EMPLOYEE
sql.employee.create=INSERT INTO HRMS.EMPLOYEE (ID,FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMAIL_ADDRESS,COLLEGE_ID,STREET_ADDRESS,CITY_ID,CONTACT_NUMBER,EMERGENCY_CONTACT_NAME,EMERGENCY_CONTACT_NUMBER,DESIGNATION_ID,DATE_OF_BIRTH,QUALIFICATION,POSTAL_CODE,DEPARTMENT_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
sql.employee.get.byId=SELECT * FROM HRMS.EMPLOYEE WHERE ID=?
##########################################EMPLOYEE RELATED PROPERTIES ####################################################
employeeIdNumericLength=6
sql.employee.nextId=SELECT GET_SEQUENCE_NEXT_VAL(?)
sql.employee.insert.basicInfo=INSERT INTO HRMS.EMPLOYEE (EMP_ID, TITLE, EMPLOYEE_FIRST_NAME, EMPLOYEE_MIDDLE_NAME, EMPLOYEE_LAST_NAME, \
    SEX, EMP_TYPE, MARITAL_STATUS, DATE_OF_JOINING, ORG_ID, \
    UNIT_ID, DEPARTMENT_ID, NATIONALITY, IDENTITY_DOC_TYPE_ID, IDENTITY_NUMBER, \
    DATE_OF_BIRTH, FATHER_NAME, EMAIL_ID, CONTACTNO, ENTRY_BY, \
    ENTRY_DATE, HR_FLAG, SUPERVISOR_FLAG) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
sql.employee.insert.addnDetails=INSERT INTO HRMS.EMPLOYEE_ADDITIONAL_DETAILS (EMP_ID, NO_OF_SIBLINGS, NO_OF_DEPENDENT, \
    NOMINEE_NAME1, NOMINEE_NAME2, NOMINEE_NAME3, NOMINEE1_SHARE, NOMINEE2_SHARE, \
    NOMINEE3_SHARE, EMERGENCY_CONTACT_NAME, EMERGENCY_CONTACTNO, \
    PRE_MEDICAL_CHKUP_DATE, MEDICAL_REPORT_COMMENT) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
sql.employee.insert.address=INSERT INTO HRMS.ADDRESS (EMP_ID, ADDRESS_TYPE,  HOUSE_NO, STREET_NAME, AREA, REGION, PIN_NO, \
    DISTRICT_ID, STATE_ID, COUNTRY_ID, DESCRIPTION) VALUES (?,?,?,?,?,?,?,?,?,?,?)
sql.employee.insert.hierarchy=INSERT INTO HRMS.EMPLOYEE_HIERARCHY_STATUS (EMP_ID, SUPERVISOR_ID, HR_ID, STATUS, \
    CL, PL, PATERNITY_LEAVE, SICK_LEAVE, MATERNITY_LEAVE, SPECIAL_LEAVE, PROBATION_PERIOD_END_DATE, \
    NOTICE_PERIOD_LAST_DATE, LAST_MOD_DATE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
sql.employee.insert.profile=INSERT INTO HRMS.EMPLOYEE_PROFILE (EMP_ID, QUALIFICATION, DESCRIPTION, COMMENTS) \
    VALUES (?,?,?,?)
sql.employee.insert.employee.salary=INSERT INTO HRMS.EMPLOYEE_SALARY (APPRAISAL_ID, EMP_ID, COMP_ID, \
    ENTRY_BY, ENTRY_DATE, SAL_VALUE) VALUES (?,?,?,?,?,?)
sql.employee.insert.employee.optional.benefit=INSERT INTO HRMS.EMPLOYEE_OPTIONAL_BENEFITS  (BENEFIT_ID, \
    EMP_ID, OPT_COMP_ID, SAL_OPT_FLAG, SAL_OPT_VALUE, SAL_OPT_START_DATE, SAL_OPT_END_DATE, \
    NEXT_DUE_DATE, REMARKS, ENTRY_BY, ENTRY_DATE, FREQUENCY, NO_OF_ITERATION) VALUES \
    (?,?,?,?,?,?,?,?,?,?, current_timestamp ,?,?)
sql.employee.insert.employee.additional.details_history=INSERT INTO HRMS.EMPLOYEE_ADDITIONAL_DETAILS_HISTORY \
	(EMP_ID, NO_OF_SIBLINGS, NO_OF_DEPENDENT, NOMINEE_NAME1, NOMINEE_NAME2, NOMINEE_NAME3, NOMINEE1_SHARE, \
	NOMINEE2_SHARE, NOMINEE3_SHARE, EMERGENCY_CONTACT_NAME, EMERGENCY_CONTACTNO, PRE_MEDICAL_CHKUP_DATE, \
	MEDICAL_REPORT_COMMENT, MOD_BY, LAST_MOD_DATE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?, CURRENT_TIMESTAMP)    

sql.jobrole.get.byOrgId=SELECT JOB_ROLE_ID, ORG_ID, A.GRADE_ID, GRADE, PROBATION_NOTICE_PERIOD, NOTICE_PERIOD FROM HRMS.JOB_ROLE_MASTER A, HRMS.GRADE_MASTER B WHERE A.GRADE_ID = B.GRADE_ID AND ORG_ID = ?
sql.employee.get.appraisal.id=SELECT APPRAISAL_ID FROM HRMS.APPRAISAL_CYCLE WHERE START_DATE <= ? \
    AND END_DATE >= ?

#update operations

sql.employee.update.employee.salary=UPDATE HRMS.EMPLOYEE_SALARY SET SAL_VALUE=?, ENTRY_BY=?, ENTRY_DATE=CURRENT_TIMESTAMP \
	WHERE EMP_ID=? AND COMP_ID=?
sql.employee.update.profile=UPDATE HRMS.EMPLOYEE_PROFILE SET QUALIFICATION=?, DESCRIPTION=?, COMMENTS=? \
    WHERE EMP_ID=?
sql.employee.update.employee.optional.benefit=UPDATE HRMS.EMPLOYEE_OPTIONAL_BENEFITS SET OPT_COMP_ID=?, \
	SAL_OPT_FLAG=?, SAL_OPT_VALUE=?, SAL_OPT_START_DATE=?, SAL_OPT_END_DATE=?, \
    NEXT_DUE_DATE=?, REMARKS=?, ENTRY_BY=?, ENTRY_DATE=CURRENT_TIMESTAMP, FREQUENCY=?, NO_OF_ITERATION=? \
    WHERE BENEFIT_ID=? AND EMP_ID=?)
    
sql.employee.update.employee.additional.details.by.EmpId=UPDATE HRMS.EMPLOYEE_ADDITIONAL_DETAILS SET \
	NO_OF_SIBLINGS=?, NO_OF_DEPENDENT=?, NOMINEE_NAME1=?, NOMINEE_NAME2=?, NOMINEE_NAME3=?,\
	NOMINEE1_SHARE=?, NOMINEE2_SHARE=?, NOMINEE3_SHARE=?, EMERGENCY_CONTACT_NAME=?,\
	EMERGENCY_CONTACTNO=?, PRE_MEDICAL_CHKUP_DATE=?, MEDICAL_REPORT_COMMENT=?\
 	WHERE EMP_ID=?;
##########################################################################################################################

#deignation
sql.designation.list=SELECT * FROM HRMS.DESIGNATION_MASTER
sql.designation.list.byJobRoleId=SELECT B.* FROM HRMS.JOB_ROLE_DESIGNATION A, HRMS.DESIGNATION_MASTER B WHERE A.DESIGNATION_ID=B.DESIGNATION_ID AND A.JOB_ROLE_ID=? 

#organization
sql.organization.list=SELECT A.ORG_ID, A.ORG_NAME, A.ADDRESS, B.ORG_TYPE_ID, B.ORG_TYPE_NAME, B.DESCRIPTION FROM HRMS.ORGANISATION_MASTER A, HRMS.ORGANISATION_TYPE_MASTER B WHERE A.ORG_TYPE_ID=B.ORG_TYPE_ID

#unit
sql.unit.list=SELECT A.UNIT_ID, A.UNIT_NAME, A.EMP_ID_PREFIX, A.EMP_ID_SEQ_NAME, A.ADDRESS, B.ORG_ID, B.ORG_NAME FROM HRMS.UNIT_MASTER A, HRMS.ORGANISATION_MASTER B WHERE A.ORG_ID=B.ORG_ID AND A.ORG_ID=?

#department
sql.department.list=SELECT A.DEPARTMENT_ID, A.DEPARTMENT_NAME, A.PARENT_DEPARTMENT_ID, A.ADDRESS, B.UNIT_ID, B.UNIT_NAME FROM HRMS.DEPARTMENT_MASTER A, HRMS.UNIT_MASTER B WHERE A.UNIT_ID=B.UNIT_ID AND A.UNIT_ID=?

#country
sql.country.list=SELECT * FROM HRMS.country_master

#district
sql.district.get.byStateId=SELECT D.DISTRICT_ID, D.DISTRICT_NAME, D.STATE_ID, S.STATE_NAME FROM HRMS.DISTRICT_MASTER D, HRMS.STATE_MASTER S WHERE D.STATE_ID=S.STATE_ID AND D.STATE_ID=?

#state
sql.state.get.byCountryId=SELECT C.COUNTRY_NAME, S.STATE_ID, S.STATE_NAME,S.COUNTRY_ID FROM HRMS.STATE_MASTER S, HRMS.COUNTRY_MASTER C WHERE S.COUNTRY_ID=C.COUNTRY_ID AND S.COUNTRY_ID=?


#DocumentType
sql.documenttype.list=SELECT * FROM HRMS.DOC_TYPE_MASTER
sql.identitydocumenttype.list=SELECT * FROM HRMS.DOC_TYPE_MASTER WHERE IDENTITY_DOC='X'
