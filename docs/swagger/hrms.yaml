swagger: '2.0'
info:
  description: This is a specification document for all the HRMS API!
  version: 1.0.0
  title: HRMS API specification
basePath: /
tags:
  - name: employee
    description: >-
      Everything about the employee management related APIs (creation, search,
      update etc)
schemes:
  - http
paths:
  '/employee/{id}/document':
    post:
      tags:
        - employee
      summary: Add a new document against the employee
      description: >-
        Adds a new document against the employee mentioned by {id}. The actual
        document should come as an attachment to the message. Additional details
        related to the document (for example its type etc) must be specified in
        the message body
      operationId: addDocument
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of employee for which document is being uploaded
          required: true
          type: string
        - in: body
          name: body
          description: Document object that needs to be uploaded / saved
          required: true
          schema:
            $ref: '#/definitions/Document'
      responses:
        '200':
          description: Successful operation
        '403':
          description: User does not have permission to update document
        '404':
          description: Provided Id is not found or internal excepton
        '405':
          description: Invalid input
      security:
        - employee_operation_auth:
            - 'write:create_employee_document'
            - 'read:read_employee_documents'
            - 'read:employee'
  '/employee/{id}/document/{docId}':
    put:
      tags:
        - employee
      summary: update a document against the employee
      description: 'Overrrides an existing document (specified by its docId), with a new one'
      operationId: updateDocument
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of employee for which document is being uploaded
          required: true
          type: string
        - name: docId
          in: path
          description: ID of the document which is being updated
          required: true
          type: string
        - in: body
          name: body
          description: Document object that needs to be uploaded / saved
          required: true
          schema:
            $ref: '#/definitions/Document'
      responses:
        '200':
          description: Successful operation
        '403':
          description: User does not have permission to update document
        '404':
          description: Provided Id is not found or internal excepton
        '405':
          description: Invalid input
      security:
        - employee_operation_auth:
            - 'write:update_employee_document'
            - 'read:read_employee_documents'
            - 'read:employee'
  '/employee/{id}/additionaldetails':
    put:
      tags:
        - employee
      summary: update additional details associated to an employee
      description: Updates additional details associated to an employee
      operationId: updateAdditionalDetails
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of employee
          required: true
          type: string
        - in: body
          name: body
          description: Additonal details that needs to be parsed and updated to DB
          required: true
          schema:
            $ref: '#/definitions/AdditionalDetails'
      responses:
        '200':
          description: Successful operation
        '403':
          description: User does not have permission to update document
        '404':
          description: Provided Id is not found or internal excepton
        '405':
          description: Invalid input
      security:
        - employee_operation_auth:
            - 'write:update_employee_additional_details'
            - 'read:read_employee_additional_details'
            - 'read:employee'
  '/employee/{id}/basicinfo':
    put:
      tags:
        - employee
      summary: update basic info associated to an employee
      description: Updates basic details associated to an employee
      operationId: updateBasicDetails
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of employee
          required: true
          type: string
        - in: body
          name: body
          description: Basic details that needs to be parsed and updated to DB
          required: true
          schema:
            $ref: '#/definitions/BasicDetails'
      responses:
        '200':
          description: Successful operation
        '403':
          description: User does not have permission to update document
        '404':
          description: Provided Id is not found or internal excepton
        '405':
          description: Invalid input
      security:
        - employee_operation_auth:
            - 'write:update_employee_basic_details'
            - 'read:read_employee_basic_details'
            - 'read:employee'
  '/employee/{id}/hierarchystatus':
    put:
      tags:
        - employee
      summary: update reporting information associated to an employee
      description: Updates reporting information associated to an employee
      operationId: updateHierarchy
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of employee
          required: true
          type: string
        - in: body
          name: body
          description: Details of supervisor
          required: true
          schema:
            $ref: '#/definitions/Supervisor'
      responses:
        '200':
          description: Successful operation
        '403':
          description: User does not have permission to update document
        '404':
          description: Provided Id is not found or internal excepton
        '405':
          description: Invalid input
      security:
        - employee_operation_auth:
            - 'write:update_employee_hierarchy'
            - 'read:read_employee_hierarchy'
            - 'read:employee'
  '/employee/{id}/profile':
    get:
      tags:
        - employee
      summary: Get the entire profile of an employee
      description: Read the entire profile of an employee
      operationId: getProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of employee
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
        '403':
          description: User does not have permission
        '404':
          description: Provided Id is not found or internal excepton
        '405':
          description: Invalid input
      security:
        - employee_operation_auth:
            - 'read:employee'
securityDefinitions:
  employee_operation_auth:
    type: oauth2
    authorizationUrl: 'http:///permission'
    flow: implicit
    scopes:
      'write:employee': Modify an employee
      'read:employee': Read an employee
      'write:create_employee_document': Create document for an employee
      'read:read_employee_documents': Read document of an employee
      'write:update_employee_hierarchy': update employee's hierarchy mapping
      'read:read_employee_hierarchy': Read employee's hierarchy info
      'write:update_employee_document': Update employee's documents
      'write:update_employee_additional_details': Update additonal details of employee
      'read:read_employee_additional_details': read additional details of an employee
      'write:update_employee_basic_details': Update basic details of employee
      'read:read_employee_basic_details': Read basic deails of employee
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Document:
    properties:
      docType:
        type: string
        description: The type of the document that is being uploaded
  AdditionalDetails:
    properties:
      details:
        type: object
        description: Additional details object
  BasicDetails:
    properties:
      details:
        type: object
        description: Basic details object
  Supervisor:
    properties:
      supervisorId:
        type: string
        description: Id of the supervisor
