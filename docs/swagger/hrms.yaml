swagger: '2.0'
info:
  description: This is an API documentation for HRMS
  version: 1.0.0
  title: HRMS
host: 'localhost:8080'
basePath: /resources
tags:
  - name: meta
    description: Meta/Master Data Access
  - name: employee
    description: Employee related resources
  - name: organization
    description: Everything about your organization
  - name: unit
    description: Everything about the unit
  - name: department
    description: It's all about departments
  - name: country
    description: Everything about the country
  - name: district
    description: Everything about the district
  - name: designation
    description: Everything about the designation
  - name: jobrole
    description: Everything about the job role
schemes:
  - http
paths:
  /v1/state:
    get:
      tags:
        - meta
      summary: Gets List of States for a Given Country
      description: Get the list of states for a given country. 
      operationId: getStates
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: countryId
          in: query
          description: Country for which the list of states will be retrieved
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/StateModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: No data found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/doctype:
    get:
      tags:
        - meta
      summary: Gets List of Document Types
      description: Get the list of document types
      operationId: getDocTypes
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DocTypeModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/doctype/identitydoctypes:
    get:
      tags:
        - meta
      summary: Gets List of Identity Document Types
      description: Get the list of identity document types
      operationId: getIdentityDocTypes
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DocTypeModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/employee/{id}/address:
    put:
      tags:
        - employee
      summary: Updates Employee Address Details
      description: Update Employee Address details.
      operationId: updateEmpAddress
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: id
          in: path
          type: string
          description: Employee ID
          required: true
        - name: reqBody
          in: body
          description: Employee Address parameters in JSON Body
          schema:
            $ref: '#/definitions/EmployeeAddressModel'
      responses:
        '200':
          description: OK
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/employee/:
    get:
      tags:
        - employee
      summary: Returns Autocomplete List for a Given Employee Attribute
      description: This API will be mainly used to provide autocomplete experience to users as they type in text fields for searching employees
      operationId: getEmployeeAutocomplete
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: attributeName
          in: query
          type: string
          description: Name of the attribute which could be firstName, middleName, lastName or emailAddress
          required: true
        - name: attributeValuePrefix
          in: query
          type: string
          description: firstName, middleName, lastName or emailAddress starts with this value
          required: true
        - name: numberOfItems
          in: query
          type: integer
          description: The number of items to be returned
          required: true
        - name: restricted
          in: query
          type: boolean
          description: The search will be restricted to the hierarchy of the user only if the flag is true. Otherwise, the search will be done across the organization
          required: true
      responses:
        '200':
          description: OK
          type: array
          items:
            type: string
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'  
  /v1/organization:
    get:
      tags:
        - organization
      summary: Returns List of Organizations
      description: OrganizationType will be a child object under each Organization object
      operationId: getOrganizations
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganizationModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/unit:
    get:
      tags:
        - unit
      summary: Returns List of Units in a Given Organization
      operationId: getUnits
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: organizationId
          in: query
          description: The organizationId to be used as filter
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UnitModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/department:
    get:
      tags:
        - department
      summary: Returns List of Departments in a Given Unit
      operationId: getDepartments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: unitId
          in: query
          description: to filter out the result based upon unit ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DepartmentModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/country:
    get:
      tags:
        - country
      summary: Returns List of Countries
      operationId: getCountries
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountryModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/district:
    get:
      tags:
        - district
      summary: Returns List of Districts
      operationId: getDistricts
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: stateId
          in: query
          description: to filter out the result based upon state ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DistrictModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/jobrole:
    get:
      tags:
        - jobrole
      summary: Returns List of Job Roles in a Given Organization
      operationId: getJobRolesOfOrg
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: orgId
          in: query
          description: to filter out the result based on organization
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobRoleModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/designation:
    get:
      tags:
        - designation
      summary: Returns List of Designations in a Given Job Role.
      operationId: getDesignationsOfJobRole
      produces:
        - application/xml
        - application/json
      parameters:
        - name: "Authorization: Bearer "
          in: header
          description: Access token
          required: true
          type: string
        - name: jobRoleId
          in: query
          description: to filter out the result based on job role
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DesignationModel'
          headers:
            Cache-Control:
              description: Caching
              type: string
              default: private, no-store, max-age=300
        '403':
          description: User does not have permission to execute this command
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  ErrorModel:
    type: object
    properties:
      errorMessage:
        type: string
        description: Detailed Error Message.
    required: 
      - errorMessage
  CountryModel:
    type: object
    properties:
      countryId:
        type: integer
        format: int(32)
        description: To uniquly identify a country. This field will be ignored during country creation.
      countryName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the country.
    required: 
      - countryId
      - countryName
  StateModel:
    type: object
    properties:
      stateId:
        type: integer
        format: int(32)
        description: To uniquly identify a state. This field will be ignored during state creation.
      stateName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the state.
      countryId:
        type: integer
        format: int(32)
        description: To uniquly identify a country.
      countryName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the country. This field will be ignored during state creation.
    required: 
      - stateId
      - stateName
      - countryId
      - countryName
  DistrictModel:
    type: object
    properties:
      districtId:
        type: integer
        format: int(32)
        description: To uniquly identify a district. This field will be ignored during district creation.
      districtName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the district.
      stateId:
        type: integer
        format: int(32)
        description: To uniquly identify a state. 
      stateName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the state. This field will be ignored during district creation.
    required: 
      - districtId
      - districtName
      - stateId
      - stateName
  DocTypeModel:
    type: object
    properties:
      docTypeId:
        type: integer
        format: int(32)
        description: To uniquly identify the type of document viz. passport, birth certificate etc. This field will be ignored during doc type creation.
      docTypeName:
        type: string
        format: varchar
        maxLength: 32
        description: The name of the document type.
      identityDoc:
        type: boolean
        description: If the document if a identity document, the value will be true, otherwise false.        
    required: 
      - docTypeId
      - docTypeName
      - identityDoc
  EmployeeAddressModel:
    type: object
    properties:
      houseNo:
        type: string
        format: varchar
        maxLength: 32
        description: The number of the house.
      streetName:
        type: string
        format: varchar
        maxLength: 32
        description: The name of the street.
      area:
        type: string
        format: varchar
        maxLength: 32
        description: The name of the area.
      region:
        type: string
        format: varchar
        maxLength: 32
        description: The name of the region.
      pinno:
        type: string
        format: varchar
        maxLength: 15
        description: The zip code of the location.
      districtId:
        type: integer
        format: int(32)
        description: The unique identifier of the district.
      districtName:
        type: string
        format: varchar
        maxLength: 32
        description: The name of the district. This field will be ignored during employee creation.
      stateId:
        type: integer
        format: int(32)
        description: The unique identifier of the state.
      stateName:
        type: string
        format: varchar
        maxLength: 32
        description: The name of the state. This field will be ignored during employee creation.
      countryId:
        type: integer
        format: int(32)
        description: The unique identifier of the country.
      countryName:
        type: string
        format: varchar
        maxLength: 32
        description: The name of the country. This field will be ignored during employee creation.
      description:
        type: string
        format: varchar
        maxLength: 100
        description: The description or landmark of the address.
    required: 
      - houseNo
      - streetName
      - pinno
      - districtId
      - districtName
      - stateId
      - stateName
      - countryId
      - countryName
  EmployeeProfileModel:
    type: object
    properties:
      qualification:
        type: string
        format: varchar
        maxLength: 32
        description: The highest qualification of the employee.
      description:
        type: string
        format: varchar
        maxLength: 256
        description: The description of the employee.
      comments:
        type: string
        format: varchar
        maxLength: 52
        description: The comments.
  EmployeeAddlDetailsModel:
    type: object
    properties:
      siblingNo:
        type: integer
        format: int(32)
        description: The number of siblings of the employee.
      dependentNo:
        type: integer
        format: int(32)
        description: The number of dependents of the employee.
      nomineeName1:
        type: string
        format: varchar
        maxLength: 120
        description: The name of the first nominee.
      nomineeName2:
        type: string
        format: varchar
        maxLength: 120
        description: The name of the second nominee.
      nomineeName3:
        type: string
        format: varchar
        maxLength: 120
        description: The name of the third nominee.
      nomineeShare1:
        type: integer
        format: int(32)
        description: The share of the first nominee.
      nomineeShare2:
        type: integer
        format: int(32)
        description: The share of the second nominee.
      nomineeShare3:
        type: integer
        format: int(32)
        description: The share of the third nominee.
      emergencyContactName:
        type: string
        format: varchar
        maxLength: 30
        description: The name emergency contact.
      emergencyContactNo:
        type: string
        format: varchar
        maxLength: 15
        description: The contact number of the emergency contact.
      preMedicalCheckUpDate:
        type: string
        format: date-time
        description: The contact number of the emergency contact.
      medicalReportComment:
        type: string
        format: varchar
        maxLength: 32
        description: The overall medical report comment.
  EmployeeHierarchyModel:
    type: object
    properties:
      supervisorId: 
        type: string
        format: varchar
        maxLength: 20
        description: The employee id of the supervisor.
      hrId:
        type: string
        format: varchar
        maxLength: 20
        description: The employee id of the HR.
      status:
        type: string
        format: varchar
        maxLength: 4
        description: The status of the employee.
      cl:
        type: integer
        format: int(32)
        description: The casual leaves of the employee.
      pl:
        type: integer
        format: int(32)
        description: The paid leaves of the employee.
      paternityLeave:
        type: integer
        format: int(32)
        description: The paternity leaves of the employee.
      maternityLeave:
        type: integer
        format: int(32)
        description: The maternity leaves of the employee.
      specialLeave:
        type: integer
        format: int(32)
        description: The special leaves of the employee.
      probationPeriodEndDate:
        type: string
        format: date-time
        description: The probation period end date.
      noticePeriodEndDate:
        type: string
        format: date-time
        description: The notice period end date.
    required:
      - supervisorId
      - hrId
      - status
      - cl
      - pl
      - paternityLeave
      - maternityLeave
      - specialLeave
      - probationPeriodEndDate
  OrganizationTypeModel:
    type: object
    properties:
      orgTypeId:
        type: integer
        format: int(32)
        description: unique identifier of the organization type. This field will be ignored during organization type creation.        
      orgTypeName:
        type: string
        format: varchar
        maxLength: 100
        description: The name of the organization type.
      description:
        type: string
        format: varchar
        maxLength: 100
        description: The description of the organization type.
    required:
      - orgTypeId
      - orgTypeName
  OrganizationModel:
    type: object
    properties:
      orgId:
        type: integer
        format: int(32)
        description: unique identifier of the organization. This field will be ignored during organization creation.
      orgName:
        type: string
        format: varchar
        maxLength: 100
        description: Name of the organization.
      orgType:
        $ref: '#/definitions/OrganizationTypeModel'
        description: The organization type.
      address:
        type: string
        format: varchar
        maxLength: 256
        description: Address of the organization
    required:
      - orgId
      - orgType
      - orgName
      - address
  UnitModel:
    type: object
    properties:
      unitId:
        type: integer
        format: int(32)
        description: To uniquly identify an unit.
      unitName:
        type: string
        format: varchar
        maxLength: 100
        description: Name of the unit.
      empIdPrefix:
        type: string
        format: varchar
        maxLength: 10
        description: Prefix of employee id.
      empIdSeqName:
        type: string
        format: varchar
        maxLength: 20
      address:
        type: string
        format: varchar
        maxLength: 256
        description: Address of the unit.
      orgId:
        type: integer
        format: int(32)
        description: unique identifier of the organization.
      orgName:
        type: string
        format: varchar
        maxLength: 100
        description: Name of the organization. This field will be ignored during unit creation.
    required:
      - unitId
      - unitName
      - empIdPrefix
      - empIdSeqName
      - address
      - orgId
      - orgName
  DepartmentModel:
    type: object
    properties:
      departmentId:
        type: integer
        format: int(32)
        description: To uniquly identify a department. This field will be ignored during department creation.
      departmentName:
        type: string
        format: varchar
        maxLength: 100
        description: Name of the department
      address:
        type: string
        format: varchar
        maxLength: 256
        description: Address of the department
      parentDepartmentId:
        type: integer
        format: int(32)
        description: To identify the parent of a particular department
      unitId:
        type: integer
        format: int(32)
        description: To identify the parent of a particular department
      unitName:
        type: string
        format: varchar
        maxLength: 256
        description: Name of the unit that the department belongs to. The field will be ignored during department creation.
    required:
      - departmentId
      - departmentName
      - address
      - unitId
      - unitName
  GradeModel:
    type: object
    properties:
      gradeId:
        type: integer
        format: int(32)
        description: To uniquly identify a grade. This field will be ignored during grade creation.
      gradeName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the grade
    required:
      - gradeId
      - gradeName
  JobRoleModel:
    type: object
    properties:
      jobRoleId:
        type: integer
        format: int(32)
        description: To uniquly identify the job role within the organization. This field will be ignored durin the job role creation.
      grade:
        $ref: '#definitions/GradeModel'
        description: Name of the grade model
      organization:
        $ref: '#definitions/OrganizationModel'
        description: Name of the organization model
      probationNoticePeriod:
        type: integer
        format: int(32)
        description: Notice period if the employee resigns during the probation period.
      NoticePeriod:
        type: integer
        format: int(32)
        description: Notice period if the employee returns after the probation period.      
    required:
      - jobRoleId
      - grade
      - organization
      - probationNoticePeriod
      - NoticePeriod
  DesignationModel:
    type: object
    properties:
      designationId:
        type: integer
        format: int(32)
        description: To uniquly identify the designation. This field will be ignored durin the designation creation.
      designationName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the designation
    required:
      - designationId
      - designationName
  SalaryModel:
    type: object
    properties:
      salaryComponent:
        $ref: '#/definitions/SalaryComponentModel'
        description: The Salary component.
      salaryValue:
        type: number
        format: double
        description: The default value of the salary Component for the paricular job role id.
      maxAllowedLimit:
        type: number
        format: double
        description: The maximum allowable limit.
    required:
      - salaryComponent
      - salaryValue
      - maxAllowedLimit
  OptionalSalaryModel:
    type: object
    properties:
      optSalaryComponent:
        $ref: '#definitions/SalaryOptComponentModel'
        description: The Salary component.
      salaryValue:
        type: number
        format: double
        description: The default value of the salary Component for the paricular job role id.
      maxAllowedLimit:
        type: number
        format: double
        description: The maximum allowable limit.
    required:
      - optSalaryComponent
      - salaryValue
      - maxAllowedLimit
  SalaryComponentModel:
    type: object
    properties:
      compId:
        type: integer
        format: int(32)
        description: Unique identifier of the salary component. This field will be ignored during salary component creation.
      compName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the salary component.
      description:
        type: string
        format: varchar
        maxLength: 32
        description: Description of the salary component.
      salComponent:
        type: string
        format: varchar
        maxLength: 32
        description: Salary componenet.
    required:
      - compId
      - compName
  SalaryOptComponentModel:
    type: object
    properties:
      optCompId:
        type: integer
        format: int(32)
        description: Unique identifier of the optional salary component. This field will be ignored during optional salary component creation.
      optCompName:
        type: string
        format: varchar
        maxLength: 32
        description: Name of the salary component.
      description:
        type: string
        format: varchar
        maxLength: 32
        description: Description of the salary component.
      salOptComponent:
        type: string
        format: varchar
        maxLength: 32
        description: Salary componenet.
      frequency:
        type: integer
        format: int(32)
        description: Frequency of the component in months.
      endDate:
        type: string
        format: date-time
        description: The end date of this benefit in company policy.
      creditDebitFlag:
        type: string
        format: varchar
        maxLength: 1
        description: This flag indicates whether the amount will be credited (C) to the employee's account or debited (D) from the employee's account.
      empOptOutFlag:
        type: string
        format: varchar
        maxLength: 1
        description: This flag indicates whether the employee can opt out from the benefit (Y) or no (N).
    required:
      - optCompId
      - optCompName
      - frequency
      - endDate
      - creditDebitFlag
      - empOptOutFlag
  EmployeeSalaryModel:
    type: object
    properties:
      salaryComponent:
        $ref: '#definitions/SalaryComponentModel'
        description: Salary Component.
      salaryValue:
        type: number
        format: double
        description: The salary value of the employee for the given salary component.        
    required:
      - salaryComponent
      - salaryValue
  EmployeeOptionalBenefitModel:
    type: object
    properties:
      optSalaryComponent:
        $ref: '#/definitions/SalaryOptComponentModel'
        description: Optional salary component.
      startDate:
        type: string
        format: date-time
        description: The start date of this benefit for the employee.
      stopDate:
        type: string
        format: date-time
        description: The stop date of this benefit for the employee.
      nextDueDate:
        type: string
        format: date-time
        description: The next due date of this benefit for the employee.
      frequency:
        type: integer
        format: int(32)
        description: Frequency of the benefit in months.
      iterations:
        type: integer
        format: int(32)
        description: Number of times the benefit will be given to the employee. Value -1 means infinite, Value 0 indicates the current benefit has been completed and will no longer be given to the employee. After every due date when the payroll runs, the iterations will be reduced by one.
      benefitValue:
        type: number
        format: double
        description: The benefit value for the employee.        
    required:
      - optSalaryComponent
      - startDate
      - benefitValue
  EmployeeModel:
    type: object
    properties:
      empId:        
        type: integer
        format: int(32)
        description: Unique identifier of the employee. This field will be ignored during employee creation.
      title:
        type: string
        format: varchar
        maxLength: 5
        description: Title of the employee.
      empFirstName:
        type: string
        format: varchar
        maxLength: 60
        description: First name of the employee.
      empMiddleName:
        type: string
        format: varchar
        maxLength: 30
        description: Middle name of the employee.
      empLastName:
        type: string
        format: varchar
        maxLength: 60
        description: Last name of the employee.
      sex:
        type: string
        format: varchar
        maxLength: 10
        description: Sex of the employee.
      empType:
        type: string
        format: varchar
        maxLength: 15
        description: Permanent or Contract employee.
      maritalStatus:
        type: string
        format: varchar
        maxLength: 10
        description: Marital status of the employee.
      doj:
        type: string
        format: date-time
        description: date of joining of the employee.
      organization:
        $ref: '#/definitions/OrganizationModel'
        description: The organization the employee belongs to.
      unit:
        $ref: '#/definitions/UnitModel'
        description: The unit the employee belongs to.
      department:
        $ref: '#/definitions/DepartmentModel'
        description: The department the employee belongs to.
      nationality: 
        type: string
        format: varchar
        maxLength: 32
        description: Nationality of the employee.
      identityDocType:
        $ref: '#/definitions/DocTypeModel'
        description: The identity document type.
      identityNumber: 
        type: string
        format: varchar
        maxLength: 32
        description: The identification document number of the employee.      
      dob:
        type: string
        format: date-time
        description: Date of birth of the employee.
      fatherName:
        type: string
        format: varchar
        maxLength: 120
        description: Father's name of the employee.
      emailId:
        type: string
        format: varchar
        maxLength: 30
        description: Email address of the employee.
      contactNo:
        type: string
        format: varchar
        maxLength: 15
        description: The contact number of the employee.
      entryBy:
        type: string
        format: varchar
        maxLength: 32
        description: The username that entered the record.
      entryDate:
        type: string
        format: date-time
        description: Entry date and time.
      hrFlag:
        type: boolean
        description: Indicates if the employee is a HR.
      supervisorFlag:
        type: boolean
        description: Indicates if the employee is a supervisor.
      employeeOptionalBenefit:
        $ref: '#/definitions/EmployeeOptionalBenefitModel'
        description: The employee optional benefit.
      employeeSalary:
        $ref: '#/definitions/EmployeeSalaryModel'
        description: The employee salary.
      employeeHierarchy:
        $ref: '#/definitions/EmployeeHierarchyModel'
        description: The employee hierarchy.
      employeeAddlDetails:
        $ref: '#/definitions/EmployeeAddlDetailsModel'
        description: The employee additional details.
      employeeAddress:
        $ref: '#/definitions/EmployeeAddressModel'
        description: The employee address.
      employeeProfile:
        $ref: '#/definitions/EmployeeProfileModel'
        description: The employee profile.
        