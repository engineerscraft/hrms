CREATE USER HUAAPPUSER IDENTIFIED BY 'HUAAPPUSER';
CREATE DATABASE HUA;
USE HUA;
GRANT ALL PRIVILEGES ON HUA.* TO HUAAPPUSER@'localhost';

CREATE TABLE APP_SEQUENCE (
  SEQ_NAME VARCHAR(20) NOT NULL,
  SEQ_VALUE BIGINT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (SEQ_NAME)
);

DELIMITER $$

CREATE FUNCTION GET_SEQUENCE_NEXT_VAL(NAME VARCHAR(20)) 
RETURNS BIGINT
BEGIN
 UPDATE APP_SEQUENCE SET SEQ_VALUE=LAST_INSERT_ID(SEQ_VALUE+1) 
 WHERE SEQ_NAME=NAME;
 
 RETURN LAST_INSERT_ID();
END$$

DELIMITER ;

CREATE TABLE ACCESS_TOKEN (
  ACCESS_ID BIGINT,
  INSERT_DTM DATETIME,
  USER_NAME VARCHAR(30),
  EXPIRY_DTM DATETIME,
  REFRESH_COUNT INT,
  LAST_REFRESH_DTM DATETIME
);

CREATE TABLE ACTIVITY_HISTORY (
  INSERT_DTM DATETIME,
  USER_NAME VARCHAR(30),
  MESSAGE VARCHAR(4000)
);

CREATE TABLE GL_ACCOUNT (
  ACCOUNT_CODE VARCHAR(20),
  ACCOUNT_NAME VARCHAR(100),
  ACCOUNT_TYPE VARCHAR(15),
  CHECK (ACCOUNT_TYPE IN ('Asset', 'Liability', 'Equity', 'Income', 'Expense')),
  PRIMARY KEY (ACCOUNT_CODE)
);

CREATE TABLE GL_ACCOUNT_HISTORY (
  HISTID INT NOT NULL AUTO_INCREMENT,
  INSERT_DTM DATETIME,
  USERNAME CHAR(20),
  OPERATION CHAR(10) CHECK (OPERATION IN ('INSERT', 'DELETE', 'UPDATE')),
  ACCOUNT_CODE VARCHAR(20),
  ACCOUNT_NAME VARCHAR(100),
  ACCOUNT_TYPE VARCHAR(15),
  CHECK (ACCOUNT_TYPE IN ('Asset', 'Liability', 'Equity', 'Income', 'Expense')),
  PRIMARY KEY (histid)
);

CREATE TABLE EMPLOYEE(
	ID INT NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(32) NOT NULL,
	MIDDLE_NAME VARCHAR(32) NULL,
	LAST_NAME VARCHAR(32) NOT NULL,
	EMAIL_ADDRESS VARCHAR(64) NOT NULL,
	COLLEGE_ID INT NOT NULL,
	STREET_ADDRESS VARCHAR (256) NOT NULL,
	CITY_ID INT NOT NULL,
	POSTAL_CODE VARCHAR(10) NOT NULL,
	CONTACT_NUMBER VARCHAR(20) NOT NULL,
	EMERGENCY_CONTACT_NAME VARCHAR(128) NOT NULL,
	EMERGENCY_CONTACT_NUMBER VARCHAR(20) NOT NULL,
	DESIGNATION_ID INT NOT NULL,
	DEPARTMENT_ID INT NOT NULL,
	DATE_OF_BIRTH DATE NOT NULL,
	QUALIFICATION VARCHAR(64) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE COLLEGE (
ID INT,
NAME VARCHAR(50)
);

CREATE TABLE DEPARTMENT (
ID INT,
NAME VARCHAR(50)
);

CREATE TABLE DESIGNATION (
ID INT,
NAME VARCHAR(50)
);

CREATE USER HRMSADM@'localhost' IDENTIFIED BY 'HRMSADM';
CREATE USER HRMSADM@'127.0.0.1' IDENTIFIED BY 'HRMSADM';
CREATE USER HRMSADM@'%' IDENTIFIED BY 'HRMSADM';
CREATE DATABASE HRMS;
USE HRMS;
GRANT ALL PRIVILEGES ON *.* TO HRMSADM@'localhost';
GRANT ALL PRIVILEGES ON *.* TO HRMSADM@'127.0.0.1';
GRANT ALL PRIVILEGES ON *.* TO HRMSADM@'%';

CREATE TABLE APP_SEQUENCE (
  SEQ_NAME VARCHAR(20) NOT NULL,
  SEQ_VALUE BIGINT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (SEQ_NAME)
);

DELIMITER $$

CREATE FUNCTION GET_SEQUENCE_NEXT_VAL(NAME VARCHAR(20)) 
RETURNS BIGINT
BEGIN
 UPDATE APP_SEQUENCE SET SEQ_VALUE=LAST_INSERT_ID(SEQ_VALUE+1) 
 WHERE SEQ_NAME=NAME;
 
 RETURN LAST_INSERT_ID();
END$$

DELIMITER ;

CREATE TABLE ACCESS_TOKEN (
  ACCESS_ID BIGINT,
  INSERT_DTM DATETIME,
  USER_NAME VARCHAR(30),
  EXPIRY_DTM DATETIME,
  REFRESH_COUNT INT,
  LAST_REFRESH_DTM DATETIME
);

CREATE TABLE ORGANISATION_TYPE_MASTER (
	ORG_TYPE_ID INT(32) PRIMARY KEY,
	ORG_TYPE_NAME	VARCHAR(100),
	DESCRIPTION	VARCHAR(100)
);

CREATE TABLE ORGANISATION_MASTER (		
	ORG_ID	INT(32)	PRIMARY KEY,
	ORG_NAME	VARCHAR(100),
	ORG_TYPE_ID	INT(32),
	ADDRESS	VARCHAR(256),
	FOREIGN KEY(ORG_TYPE_ID) REFERENCES ORGANISATION_TYPE_MASTER(ORG_TYPE_ID)
);

CREATE TABLE UNIT_MASTER (		
	UNIT_ID	INT(32) PRIMARY KEY,
	UNIT_NAME VARCHAR(100),
	ORG_ID INT(32),
	ADDRESS	VARCHAR(256),
	FOREIGN KEY(ORG_ID) REFERENCES ORGANISATION_MASTER(ORG_ID)
);

CREATE TABLE DEPARTMENT_MASTER (	
	DEPARTMENT_ID	INT(32)	PRIMARY KEY,
	DEPARTMENT_NAME VARCHAR(100),
	UNIT_ID	INT(32),	
	ADDRESS	VARCHAR(256),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT_MASTER(UNIT_ID)
);

CREATE TABLE JOB_ROLE_MASTER	(	
	ROLE_ID	INT(32)	PRIMARY KEY,
	JOB_ROLE_DESCRIPTION	VARCHAR(52),
	DEPARTMENT_ID	INT(32),
	SUPERVISOR_ID	INT(32),
	GRADE	INT(32),
	DESIGNATION	VARCHAR(52),
	HR_FLAG	INT(1),
	HR_ID	INT(32),
	PROVISION_PERIOD	INT(32),
	NOTICE_PERIOD	INT(32),
	FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENT_MASTER(DEPARTMENT_ID)
);

CREATE TABLE SALARY_COMPONENT_MASTER (	
	COMPONENT_ID	INT(32)	PRIMARY KEY,
	COMPONENT_NAME	VARCHAR(32),
	DESCRIPTION	VARCHAR(32),
	SAL_COMPONENT	VARCHAR(32)
);
					
CREATE TABLE SALARY_OPT_COMPONENT_MASTER	(	
	OPT_COMPONENT_ID	INT(32)	PRIMARY KEY,
	OPT_COMPONENT_NAME VARCHAR(32),
	DESCRIPTION	VARCHAR(32),
	SAL_OPT_COMPONENT	VARCHAR(32)
);
	
CREATE TABLE SALARY_MASTER (
		SALARY_ID	INT(32)	PRIMARY KEY,
		DESCRIPTION	VARCHAR(100),
		JOB_ROLE_ID	INT(32),
		SAL_COMP_ID	INT(32),
		SAL_VALUE	DECIMAL(32,2),		
		SAL_OPT_COMP_ID	INT(32),
		SAL_OPT_COMP_VALUE	INT(32),
		FOREIGN KEY(SAL_COMP_ID) REFERENCES SALARY_COMPONENT_MASTER(COMPONENT_ID),
		FOREIGN KEY(SAL_OPT_COMP_ID) REFERENCES SALARY_OPT_COMPONENT_MASTER(OPT_COMPONENT_ID)
);

CREATE TABLE EMPLOYEE (	
	EMPLOYEE_ID	INT(10) PRIMARY KEY,
	TITLE	VARCHAR(5),
	EMPLOYEE_FIRST_NAME	VARCHAR(60),
	EMPLOYEE_MIDDLE_NAME	VARCHAR(30),
	EMPLOYEE_LAST_NAME	VARCHAR(60),
	DATE_OF_JOINING	DATE,
	ORG_ID	INT(32),	
	UNIT_ID	INT(32),	
	DEPARTMENT_ID	INT(32),
	DEPARTMENT_NAME	VARCHAR(32),
	JOB_ROLE_ID	INT(32),
	DESIGNATION	VARCHAR(32),
	NATIONALITY	VARCHAR(32),
	IDENTITY_NUMBER	VARCHAR(32),
	DATE_OF_BIRTH	DATE,		
	FATHER_NAME	VARCHAR(120),
	ENTRY_BY	VARCHAR(32),
	ENTRY_DATE	DATE,
	FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENT_MASTER(DEPARTMENT_ID),
	FOREIGN KEY(ORG_ID) REFERENCES ORGANISATION_MASTER(ORG_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT_MASTER(UNIT_ID)
);

CREATE TABLE EMPLOYEE_ADDITIONAL_DETAILS (	
	EMP_ID	INT(32),
	NO_OF_SIBLINGS	INT(32),
	NO_OF_DEPENDENT	INT(32),
	NOMINEE_NAME1	VARCHAR(120),
	NOMINEE_NAME2	VARCHAR(120),
	NOMINEE_NAME3	VARCHAR(120),
	NOMINEE1_SHARE	INT(32),
	NOMINEE2_SHARE	INT(32),
	NOMINEE3_SHARE	INT(32),
	PRE_MEDICAL_CHKUP_DATE	DATE,
	PRE_MEDICAL_CHKUP_REPORT	LONGBLOB,
	MEDICAL_REPORT_COMMENT	VARCHAR(32)
);

CREATE TABLE ADDRESS(	
		EMP_ID	INT,
		HOUSE_NO	VARCHAR(32),
		STREET_NAME	VARCHAR(32),
		AREA	VARCHAR(32),
		REGION	VARCHAR(32),
		PIN_NO	INT(32),
		DISTRICT	VARCHAR(32),
		STATE	VARCHAR(32),
		COUNTRY	VARCHAR(32),
		DESCRIPTION	VARCHAR(100)
);

CREATE TABLE EMPLOYEE_PROFILE(
		EMP_ID	INT(32),
		QUALIFICATION	VARCHAR(32),
		DESCRIPTION	VARCHAR(256),
		CERTIFICATE_DOC	LONGBLOB,
		IDENTIFICATION_DOC	LONGBLOB,
		EMPLOYEE_IMAGE	LONGBLOB,
		COMMENTS	VARCHAR(52)
);
				
CREATE TABLE EMPLOYEE_HIERARCHY_STATUS(	
	EMP_ID INT(32),
	SUPERVISOR_ID INT(32),
	HR_ID INT(32),
	STATUS VARCHAR(4),
	CL	INT(32),
	PL	INT(32),
	PATTERNITY_LEAVE	INT(32),
	SICK_LEAVE	INT(32),
	MATTERNITY_LEAVE	INT(32),
	SPECIAL_LEAVE	INT(32),
	PROVISION_PERIOD_END_DATE	DATE,	
	NOTICE_PERIOD_LAST_DATE	DATE,
	LAST_MOD_DATE	DATE,
	PRERFORMANCE_INDICATOR	INT(32),
	PRERFORMANCE_DESCRIPTION	VARCHAR(32)
);

CREATE TABLE EMPLOYEE_SALARY(
	EMP_ID	INT(32),
	SAL_COMP_ID	VARCHAR(52),
	ENTRY_BY	VARCHAR(32),
	ENTRY_DATE	DATE,	
	SAL_VALUE	DECIMAL(32,2)	
);
				
CREATE TABLE EMPLOYEE_OPTIONAL_BENEFITS (	
	EMP_ID INT(32),
	SAL_OPT_COMP_ID	VARCHAR(52),
	SAL_OPT_FLAG	INT(1),
	SAL_OPT_VALUE	FLOAT(32),
	SAL_OPT_START_DATE	DATE,
	SAL_OPT_END_DATE	DATE,
	REMARKS	VARCHAR(100),
	ENTRY_BY	VARCHAR(32),
	ENTRY_DATE	DATE
);

CREATE TABLE EMPLOYEE_HISTORY(
	EMP_ID	INT(10),
	TITLE	VARCHAR(5),
	EMPLOYEE_FIRST_NAME	VARCHAR(60),
	EMPLOYEE_MIDDLE_NAME	VARCHAR(30),
	EMPLOYEE_LAST_NAME	VARCHAR(60),
	DATE_OF_JOINING	DATE,	
	ORG_ID	INT(32),
	UNIT_ID	INT(32),
	DEPARTMENT_ID	INT(32),
	DEPARTMENT_NAME	VARCHAR(32),
	JOB_ROLE_ID	INT(32),
	DESIGNATION	VARCHAR(32),
	NATIONALITY	VARCHAR(32),
	IDENTITY_NUMBER	VARCHAR(32),
	DATE_OF_BIRTH	DATE,
	FATHER_NAME	VARCHAR(120),
	MOD_BY	VARCHAR(32),
	LAST_MOD_DATE	DATE	
);

CREATE TABLE EMPLOYEE_ADDITIONAL_DETAILS_HISTORY (	
	EMP_ID	INT(32),
	NO_OF_SIBLINGS	INT(32),
	NO_OF_DEPENDENT	INT(32),
	NOMINEE_NAME1	VARCHAR(120),
	NOMINEE_NAME2	VARCHAR(120),
	NOMINEE_NAME3	VARCHAR(120),
	NOMINEE1_SHARE	INT(32),
	NOMINEE2_SHARE	INT(32),
	NOMINEE3_SHARE	INT(32),
	PRE_MEDICAL_CHKUP_DATE	DATE,
	PRE_MEDICAL_CHKUP_REPORT	LONGBLOB,
	MEDICAL_REPORT_COMMENT	VARCHAR(32),
	MOD_BY	VARCHAR(32),
	LAST_MOD_DATE	DATE	
);	

CREATE TABLE EMPLOYEE_PROFILE_HISTORY	(
	EMP_ID	INT(32),
	QUALIFICATION	VARCHAR(32),
	DESCRIPTION	VARCHAR(256),
	CERTIFICATE_DOC	LONGBLOB,
	IDENTIFICATION_DOC	LONGBLOB,
	EMPLOYEE_IMAGE	LONGBLOB,
	COMMENTS	VARCHAR(52),
	MOD_BY	VARCHAR(32),
	LAST_MOD_DATE	DATE	
);

CREATE TABLE EMPLOYEE_HIERARCHY_STATUS_HISTORY	(	
	EMP_ID	INT(32),
	SUPERVISOR_ID	INT(32),
	HR_ID	INT(32),
	STATUS	VARCHAR(4),
	CL	INT(32),
	PL	INT(32),
	PATTERNITY_LEAVE	INT(32),
	SICK_LEAVE	INT(32),
	MATTERNITY_LEAVE	INT(32),
	SPECIAL_LEAVE	INT(32),
	PROVISION_PERIOD_END_DATE	DATE,
	NOTICE_PERIOD_LAST_DATE	DATE,
	LAST_MOD_DATE	DATE,
	MOD_BY	VARCHAR(32)
);

				
CREATE TABLE EMPLOYEE_SALARY_HISTORY (	
	EMP_ID	INT(32),
	SAL_COMP_ID	VARCHAR(52),
	SAL_VALUE	DECIMAL(32,2),	
	LAST_MOD_DATE	DATE,
	MOD_BY	VARCHAR(32)
);

CREATE TABLE EMPLOYEE_OPTIONAL_BENEFITS_HISTORY (	
	EMP_ID INT(32),
	SAL_OPT_COMP_ID	VARCHAR(52),
	SAL_OPT_FLAG	INT(1),
	SAL_OPT_VALUE	FLOAT(32),
	SAL_OPT_START_DATE	DATE,
	SAL_OPT_END_DATE	DATE,
	REMARKS	VARCHAR(100),
	MOD_BY	DATE,
	LAST_MOD_DATE	VARCHAR(32)
);

				
